---
interface Props {
  story: string;
  song: {
    link: string;
    name: string;
  };
  author: {
    name: string;
    link: string;
  };
}

const { story, song, author } = Astro.props;
---

<article>
  <div class="story-container">
    <h2>Story</h2>
    <p>
      {story}
    </p>
  </div>
  <div class="metadata-container">
    <div class="author-container">
      <h2>Author</h2>
      <a href={author.link}>{author.name}</a>
    </div>
    <div class="song-container">
      <h2>Chosen Song</h2>
      <div>
        <a href={song.link}>{song.name}</a>
      </div>
    </div>
  </div>
</article>

<style>
  article {
    grid-area: 2 / 2 / span 1 / -1;

    display: grid;
    grid-template-columns: auto;

    max-width: 66ch;

    margin: 1rem;
  }

  h2 {
    font-family: "Crimson Pro", serif;
    font-style: normal;
    font-size: 0.75rem;
    font-weight: 400;
    text-transform: uppercase;

    margin: 0;
  }

  .story-container p {
    margin-bottom: 1rem;

    font-family: "PP Migra", serif;
    font-style: italic;
  }

  .metadata-container {
    display: flex;
    flex-wrap: wrap;

    align-content: flex-start;

    row-gap: 0.5rem;
    column-gap: 2rem;
  }

  .metadata-container > .author-container {
    flex: 1;
  }

  .metadata-container > .song-container {
    flex: 1 0 auto;
  }

  @media screen and (min-width: 768px) {
    article {
      grid-template-columns: auto auto;
      gap: 1.5rem;
    }

    .metadata-container {
      min-width: 20ch;

      flex-direction: column;
    }
  }
</style>
